on: [push, pull_request]

name: Continuous integration

jobs:
  bench_nightly:
    name: Nightly - ASan + Bench
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - nightly
    steps:
      - name: Checkout Crate 
        uses: actions/checkout@v2
      - name: Checkout Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          components: rust-src
      - name: Running address sanitizer
        env:
          DO_ASAN: true
        run: ./contrib/test.sh
      - name: Running benchmarks
        env:
          DO_BENCH: true
        run: ./contrib/test.sh

  wasm: 
    name: Stable - Docs / WebAssembly Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
    steps:
      - name: Checkout Crate
        uses: actions/checkout@v2
      - name: Checkout Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
      - name: Building docs
        env:
          DO_DOCS: true
        run: ./contrib/test.sh
      - name: Running WASM build
        env:
          DO_WASM: true
        run: ./contrib/test.sh

  Tests:
    name: Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - 1.29.0
          - beta
          - stable
    steps:
      - name: Checkout Crate
        uses: actions/checkout@v2
      - name: Checkout Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
      - name: Pin cc if rust 1.29
        if: matrix.rust == '1.29.0'
        run: cargo generate-lockfile --verbose && cargo update -p cc --precise "1.0.41" --verbose
      - name: Running cargo
        env:
          DO_FEATURE_MATRIX: true
        run: ./contrib/test.sh

  wasm_test_macos:
    name: WebAssembly Test
    strategy:
      matrix:
        rust:
          - stable
        target: [ x86_64-unknown-linux-gnu, x86_64-apple-darwin ]
        include:

          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest

          - target: x86_64-apple-darwin
            os: macos-latest

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Crate
        uses: actions/checkout@v2
      - name: Checkout Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
      - name: Running WASM tests Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: |
          clang --version
          CARGO_TARGET_DIR=wasm cargo install --verbose --force wasm-pack &&
          printf '\n[lib]\ncrate-type = ["cdylib", "rlib"]\n' >> Cargo.toml &&
          CC=clang-9 wasm-pack build
          CC=clang-9 wasm-pack test --node

      - name: Running WASM tests MacOS
        if: matrix.os == 'macos-latest'
        run: |
          brew install gcc
          gcc --version
          CARGO_TARGET_DIR=wasm cargo install --verbose --force wasm-pack &&
          printf '\n[lib]\ncrate-type = ["cdylib", "rlib"]\n' >> Cargo.toml &&
          CC=gcc wasm-pack build
          CC=gcc wasm-pack test --node
